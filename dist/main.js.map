{"version":3,"file":"main.js","mappings":"8IACAA,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQE,mBAAgB,EACxB,MAAMC,EAAa,EAAQ,KACrBC,EAAqB,EAAQ,KAYnCJ,EAAQE,cAXc,KAClB,MAAMG,EAAY,GAAGC,QAAQC,gBACxB,EAAIJ,EAAWK,YAAY,GAAGH,eAC/B,EAAIF,EAAWM,WAAW,GAAGJ,aAEjC,MAAMK,EAAcN,EAAmBO,iBAAiBC,iBACxDF,EAAYG,SAASC,SAAQ,CAACC,EAASC,MACnC,EAAIb,EAAWc,eAAe,GAAGZ,qBAA6BW,QAAaD,EAAQG,QAAQ,eAAgB,KAAKA,QAAQ,SAAU,OAAO,KAE7I,EAAIf,EAAWc,eAAe,GAAGZ,wBAAiCK,EAAYM,MAAM,C,gBCZxF,MAAMG,EAAgB,EAAQ,KACN,EAAQ,KAEGjB,cAClBiB,EAAcC,YACND,EAAcE,mB,cCNvCvB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQW,sBAAmB,EAC3B,IAAID,EAAc,GAClB,MAAMY,EAAiB,IAAIC,IAGrBC,EAAkBC,IACpB,MAAMC,EAAW,CACbC,GAAIF,EAAKG,KAAKC,QAAQF,GACtBG,QAASL,EAAKG,KAAKC,QAAQC,QAC3BD,QAAS,oCAA8BJ,EAAKG,KAAKC,QAAQE,IAAIC,sBAAwB,IAAIC,KAAiD,KAA3CR,EAAKG,KAAKC,QAAQC,SAAW,YACvHI,cACAhB,QAAQ,OAAQ,8BAEzBR,EAAYyB,KAAKT,GACjBJ,EAAec,IAAIV,EAASC,IAAI,EAAK,EAQzC3B,EAAQW,iBAAmB,CACvBC,eAAgB,KACZ,MAAMC,EAAW,GACjB,IAAIwB,EAAe,EACnBxB,EAASwB,GAAgB,GACzB,MACMC,EAAa,GAYnB,OAXAA,EAAWH,KAAK,yDAAgDE,yBAChE3B,EACK6B,MAAK,CAACC,EAAGC,IAAMA,EAAEX,QAAUU,EAAEV,UAC7BhB,SAAQ,CAAC4B,EAAM1B,KAChBH,EAASwB,GAAcF,KAAKO,EAAKb,UAC5Bb,EAAQ,GAPA,KAOkB,IAC3BqB,GAAgB,EAChBC,EAAWH,KAAK,yDAAgDE,yBAChExB,EAASwB,GAAgB,GAC7B,IAEG,CACHrB,MAAO,6GAAwBsB,EAAWK,KAAK,qBAC/C9B,SAAUA,EAAS+B,KAAI7B,GAAW,gNAAmBA,EAAQ4B,KAAK,iBACrE,EAELE,cAAgBjB,IACZJ,EAAeI,EAAK,EAExBR,YAAcK,IACVD,EAAeC,GACRA,GAEXqB,UAAW,KACPpC,EAAc,EAAE,E,gBCtDxBZ,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQoB,YAAcpB,EAAQqB,yBAAsB,EACpD,MAAMjB,EAAqB,EAAQ,KAInCJ,EAAQqB,oBAHoB,KACxBjB,EAAmBO,iBAAiBmC,WAAW,EAQnD9C,EAAQoB,YALa2B,IACjB,IAAItB,EAAOsB,EAEX,OADAtB,EAAOrB,EAAmBO,iBAAiBS,YAAYK,GAChDA,CAAI,C,UCXfuB,EAAOhD,QAAUiD,QAAQ,W","sources":["webpack://sitemap-generator-static-suite/./src/createSitemap.ts","webpack://sitemap-generator-static-suite/./src/index.ts","webpack://sitemap-generator-static-suite/./src/node/sitemapProcessor.ts","webpack://sitemap-generator-static-suite/./src/processNode.ts","webpack://sitemap-generator-static-suite/external commonjs \"fs-extra\""],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createSitemap = void 0;\nconst fs_extra_1 = require(\"fs-extra\");\nconst sitemapProcessor_1 = require(\"./node/sitemapProcessor\");\nconst createSitemap = () => {\n    const publicDir = `${process.cwd()}/public`;\n    if (!(0, fs_extra_1.existsSync)(`${publicDir}/sitemap`)) {\n        (0, fs_extra_1.mkdirSync)(`${publicDir}/sitemap`);\n    }\n    const sitemapData = sitemapProcessor_1.sitemapProcessor.getSitemapData();\n    sitemapData.sitemaps.forEach((sitemap, index) => {\n        (0, fs_extra_1.writeFileSync)(`${publicDir}/sitemap/sitemap.${index}.xml`, sitemap.replace(/#__slash__#/g, '/').replace(/\\\\\\\\u/g, '\\\\u'));\n    });\n    (0, fs_extra_1.writeFileSync)(`${publicDir}/sitemap/sitemap.xml`, sitemapData.index);\n};\nexports.createSitemap = createSitemap;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst processNode_1 = require(\"./processNode\");\nconst createSitemap_1 = require(\"./createSitemap\");\nexports.default = {\n    createSitemap: createSitemap_1.createSitemap,\n    processNode: processNode_1.processNode,\n    bootstrapProcessors: processNode_1.bootstrapProcessors\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sitemapProcessor = void 0;\nlet sitemapData = [];\nconst sitemapDataIds = new Map();\n// Use a function to avoid conf to be instantiated when this file is required.\nconst getDomain = () => 'https://www.selfbank.es';\nconst setSitemapData = (node) => {\n    const nodeData = {\n        id: node.data.content.id,\n        changed: node.data.content.changed,\n        content: `<url><loc>${`${getDomain()}${node.data.content.url.path}`}</loc><lastmod>${new Date((node.data.content.changed || 1546344000) * 1000)\n            .toISOString()\n            .replace('000Z', '000000Z')}</lastmod></url>`,\n    };\n    sitemapData.push(nodeData);\n    sitemapDataIds.set(nodeData.id, true);\n};\nconst sitemapHeader = `<?xml version='1.0' encoding='utf-8'?>\n<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\" xmlns:image=\"http://www.google.com/schemas/sitemap-image/1.1\" xmlns:xhtml=\"http://www.w3.org/1999/xhtml\">`;\nconst sitemapFooter = '</urlset>';\nconst sitemapIndexHeader = `<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<sitemapindex xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">`;\nconst sitemapIndexFooter = '</sitemapindex>';\nexports.sitemapProcessor = {\n    getSitemapData: () => {\n        const sitemaps = [];\n        let sitemapIndex = 1;\n        sitemaps[sitemapIndex] = [];\n        const maxItems = 2000;\n        const indexItems = [];\n        indexItems.push(`<sitemap><loc>${getDomain()}/sitemap/sitemap.${sitemapIndex}.xml</loc></sitemap>`);\n        sitemapData\n            .sort((a, b) => b.changed - a.changed)\n            .forEach((item, index) => {\n            sitemaps[sitemapIndex].push(item.content);\n            if ((index + 1) % maxItems === 0) {\n                sitemapIndex += 1;\n                indexItems.push(`<sitemap><loc>${getDomain()}/sitemap/sitemap.${sitemapIndex}.xml</loc></sitemap>`);\n                sitemaps[sitemapIndex] = [];\n            }\n        });\n        return {\n            index: `${sitemapIndexHeader}${indexItems.join('')}${sitemapIndexFooter}`,\n            sitemaps: sitemaps.map(sitemap => `${sitemapHeader}${sitemap.join('')}${sitemapFooter}`),\n        };\n    },\n    addStaticNode: (data) => {\n        setSitemapData(data);\n    },\n    processNode: (node) => {\n        setSitemapData(node);\n        return node;\n    },\n    bootstrap: () => {\n        sitemapData = [];\n    },\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.processNode = exports.bootstrapProcessors = void 0;\nconst sitemapProcessor_1 = require(\"./node/sitemapProcessor\");\nconst bootstrapProcessors = () => {\n    sitemapProcessor_1.sitemapProcessor.bootstrap();\n};\nexports.bootstrapProcessors = bootstrapProcessors;\nconst processNode = (originalNode) => {\n    let node = originalNode;\n    node = sitemapProcessor_1.sitemapProcessor.processNode(node);\n    return node;\n};\nexports.processNode = processNode;\n","module.exports = require(\"fs-extra\");"],"names":["Object","defineProperty","exports","value","createSitemap","fs_extra_1","sitemapProcessor_1","publicDir","process","cwd","existsSync","mkdirSync","sitemapData","sitemapProcessor","getSitemapData","sitemaps","forEach","sitemap","index","writeFileSync","replace","processNode_1","processNode","bootstrapProcessors","sitemapDataIds","Map","setSitemapData","node","nodeData","id","data","content","changed","url","path","Date","toISOString","push","set","sitemapIndex","indexItems","sort","a","b","item","join","map","addStaticNode","bootstrap","originalNode","module","require"],"sourceRoot":""}